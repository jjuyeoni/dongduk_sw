<%= form_with model: @post, local: true do |form| %>
  
  <% if @post.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= pluralize(@post.errors.count, "error") %> prohibited
        this post from being saved:
      </h2>
      <ul>
        <% @post.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  
  <p>
    <div class="form-group row">
      <div style="margin-left:10px;"><%= form.select(:category, options_for_select(['게임','코딩','언어','뷰티','운동','음악']),{}, {:class=>"form-control"})%></div>&nbsp;
      <div style="width:90%;margin:0px"><%= form.text_field :title , class:"form-control", :placeholder => 'title', :style => 'display:inline'%></div>
    </div>
  </p>
 
  <p>
    <%= form.label :content %><br>
    <%= form.text_area :content , class:"form-control", size: "24x6" %>
  </p>
 
    <p><%= form.label :date %>
    <div id="dox" class="table-control">
      <% days = ['일', '월', '화', '수', '목', '금', '토'] %>
      <% for i in 0..6 %>
         <font <%if i == 0%> color="#DC143C" <% elsif i == 6 %> color="#4169E1" <%end%> ><%= days[i] %></font> &nbsp;
            <input type="checkbox" name="date[<%= i %>][]" value="안돼!">안돼!&nbsp;
            <input type="checkbox" name="date[<%= i %>][]" value="오전"> 오전 &nbsp; <input type="checkbox" name="date[<%= i %>][]" value="오후"> 오후 &nbsp; 
            <input type="checkbox" name="date[<%= i %>][]" value="저녁"> 저녁 &nbsp; <input type="checkbox" name="date[<%= i %>][]" value="풀타임"> 풀타임 &nbsp;
          <br>
      <% end %>
    </div>
    </p>

<imput type="address" id="demo"></imput>
<div id="map" style="width:100%;height:350px;"></div>

<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=194dda0c9f26fd6381c1f54652c244e6&libraries=services"></script>
<script>
// 주소-좌표 변환 객체를 생성합니다
var geocoder = new daum.maps.services.Geocoder();

var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
    mapOption = { 
        center: new daum.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
        level: 3 // 지도의 확대 레벨 
    }; 
    
var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

if (navigator.geolocation) {
    
    // GeoLocation을 이용해서 접속 위치를 얻어옵니다
    navigator.geolocation.getCurrentPosition(function(position) {
        
        var lat = position.coords.latitude, // 위도
            lon = position.coords.longitude; // 경도
        
        document.getElementById("post_lat").value = lat;
        document.getElementById("post_lon").value = lon;
        
        var locPosition = new daum.maps.LatLng(lat, lon); // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
            // message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다
        
        // 마커와 인포윈도우를 표시합니다
        displayMarker(locPosition);
        searchAddrFromCoords(locPosition, displayCenterInfo);
      });
    
} else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
    
    var locPosition = new daum.maps.LatLng(33.450701, 126.570667);    
        // message = 'geolocation을 사용할수 없어요..'
        
    displayMarker(locPosition);
    searchAddrFromCoords(locPosition, displayCenterInfo);
}
// 지도에 마커와 인포윈도우를 표시하는 함수입니다
function displayMarker(locPosition) {
    // 마커를 생성합니다
    var marker = new daum.maps.Marker({  
        map: map, 
        position: locPosition
    }); 
    
    // 지도 중심좌표를 접속위치로 변경합니다
    map.setCenter(locPosition);  
    
    // 지도에 클릭 이벤트를 등록합니다
    // 지도를 클릭하면 마지막 파라미터로 넘어온 함수를 호출합니다
    daum.maps.event.addListener(map, 'click', function(mouseEvent) {        
    
        // 클릭한 위도, 경도 정보를 가져옵니다 
        var latlng = mouseEvent.latLng; 
        
        // 마커 위치를 클릭한 위치로 옮깁니다
        marker.setPosition(latlng);
       
        document.getElementById("post_lat").value = latlng.getLat();
        document.getElementById("post_lon").value = latlng.getLng();
        
        locPosition = new daum.maps.LatLng(latlng.getLat(), latlng.getLng());
        searchAddrFromCoords(locPosition, displayCenterInfo);
    });
}   
function searchAddrFromCoords(coords, callback) {
    // 좌표로 행정동 주소 정보를 요청합니다
    geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);
}

var address;

function displayCenterInfo(result, status) {
    if (status === daum.maps.services.Status.OK) {
        //var infoDiv = document.getElementById('centerAddr');

        for(var i = 0; i < result.length; i++) {
            // 행정동의 region_type 값은 'H' 이므로
            if (result[i].region_type === 'H') {
                address = result[i].address_name.split(" ");
                document.getElementById("demo").innerHTML = address[2];
                break;
            }
        }
        document.getElementById("post_add").value = address[2];
    }
}
</script>
 <p>
    <%= form.hidden_field :lat %>
    <%= form.hidden_field :lon %>
    <%= form.hidden_field :add %>
  </p>

  <p>
    <button type="button" onClick="aa(this.form)">Done</button>
    <%=submit_tag '제출' %>
  </p>
<% end %>

<script>
  function aa(form){
    for (var j = 0; j < 7; j++){
      str = "date[" + j + "][]"
     var q = document.getElementsByName(str);
    isChk = false;
    for(var i=0; i < q.length; i++){
      
            if(q[i].checked == true) {
                isChk = true;
                break;}}
    
    if(!isChk){
      alert("시간 항목 오류");
       return false;}}
       
    
      return form.submit();
    
}
</script>